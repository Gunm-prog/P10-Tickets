version: '2'


##todo environnement bdd

networks:
 app_network:
   name: lib10network
   driver: bridge

services:

  postman:
    image: postman/newman:alpine
    container_name: postmanTests
    restart: on-failure
    command:
      run postmanTests.postman_collection.json -e postmanTests.postman_collection.json -k
      -r cli,json
      --reporter-json-export="reports/fastRestAPITests.json"
    volumes:
   # target/test-classes/com.emilie.lib10/postmanTests..postman_collection.json
    #  - ./postmanTests:/target/test-classes/com.emilie.lib10
      - "./:/target/test-classes/com.emilie.lib10"
    depends_on:
      - api
      - db
  #  links:
  #    - api:api
  #    - db:db
    networks:
      - app_network

  api:
   # image: maven:3.6.3-jdk-8-openj9
    container_name: lib10_api
    restart : always
###    restart: on-failure
###    env_file: ./.env
    ports:
      # local:container
      - "8081:80"
    networks:
      - app_network
  #  tty: true
    environment: 
 ###     SPRING_APPLICATION_JSON: '{
 ###       "spring.datasource.url"  : "jdbc:mysql://mysql:3306/LIB10?useSSL=false",
 ###       "spring.datasource.username" : "$MYSQL_USER",
 ###       "spring.datasource.password" : "secret",
 ###       "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL5InnoDBDialect",
 ###       "spring.jpa.hibernate.ddl-auto" : "update"
 ###     }'

      #### it's work!
      - spring.datasource.url=jdbc:mysql://db:3306/LIB10
    #  - spring.datasource.username=usr_lib10
   #   - spring.datasource.password=secret

    #  DB_CONN_STR: "host=db;port=3306;database=LIB10;userid=usr_lib10;password=secret"
    #volumes:
###    volumes:
###      - .m2:/root/.m2
    build:
      context: ../../
      dockerfile: Dockerfile
    depends_on:
      - db
###    stdin_open: true
###    tty: true
  #  links:
      # Lien vers le conteneur "db" (déclaré ci-dessus)
  #    - db

  db:
    image: mysql:8.0.25
    command: --default-authentication-plugin=mysql_native_password
###    container_name: lib10_bdd
###    restart: unless-stopped
###    env_file: ./.env
    ports:
      - "3306:3306"
    networks:
      - app_network
    volumes:
      - "./db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d"
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQL_DATABASE
      - MYSQL_USER=$MYSQL_USER
      - MYSQL_PASSWORD=secret
      #  DB_CONN_STR: "host=db;port=3306;database=LIB10;userid=usr_lib10;password=secret"

###volumes:
 ### db:   
#volumes:
#  mysql-data:
#    driver: local
  
