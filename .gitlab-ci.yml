
image: tmaier/docker-compose

cache:
  paths:
    - "**/.m2/repository"

services:
  - mysql:latest

variables:
  MAVEN_CLI_OPTS: "--batch-mode"
  #config maven pour stocker le repository dans un emplacement connu
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

  MYSQL_ROOT_PASSWORD: rootPass
  MYSQL_USER: usr_lib10
  #  MYSQL_PASSWORD: secret
  MYSQL_DATABASE: lib10
  MYSQL_HOST: mysql

  POSTMAN_COLLECTION : postmanTests.postman_collection.json
  POSTMAN_ENVIRONMENT: postmanTests.postman_environment.json

  DOCKER_CI_IMAGE: "$CI_REGISTRY_IMAGE:ci-$CI_COMMIT_SHORT_SHA"

stages:
  - unit
  - compose

#.docker-login: &docker-login
#  - echo ${p10_pat} | docker login $CI_REGISTRY -u Gunm-prog --password-stdin

#.init-db: &init-db
#  #connexion et test de connexion
#  - echo "SELECT 'OK';" | mysql --user=root --password="${MYSQL_ROOT_PASSWORD}" --host=mysql "${MYSQL_DATABASE}"
#
#  - mysql --user=root --password="${MYSQL_ROOT_PASSWORD}" --host=mysql < ./docker/dev/init/db/docker-entrypoint-initdb.d/01_create_schema.sql
#  - mysql --user=root --password="${MYSQL_ROOT_PASSWORD}" --host=mysql < ./docker/dev/init/db/docker-entrypoint-initdb.d/02_create_tables.sql
#  - mysql --user=root --password="${MYSQL_ROOT_PASSWORD}" --host=mysql --database="${MYSQL_DATABASE}" < ./docker/dev/init/db/docker-entrypoint-initdb.d/21_insert_data_demo.sql

test-unit:
  stage: unit
  image: maven:3.6.3-jdk-8-openj9
  coverage: '/Total.*?([0â€“9]{1,3})%/'
  script:
    - cd Lib10/
    - mvn $MAVEN_CLI_OPTS site
  artifacts:
    reports:
      junit:
        - "**/target/surefire-reports/TEST-*.xml"
    expire_in: 1 hour
    paths:
      - "**/target"

test-compose:
  stage: compose
  needs:
    - job: test-unit
  services:
    - name: docker:dind
  script:
    - cd Lib10/docker/ci
    - docker-compose up --exit-code-from=postman
  artifacts:
    when: always
    paths:
      - "*/docker/ci/reports/*.html"
      - '*/target' # for multi-modules project with directory root as a pom package type
