#image: aritrasasmal/maven-mysql-java
image: zhangpin/docker-maven-mysql-vipkid

cache:
  paths:
    - "**/.m2/repository"

services:
  - name: mysql:8.0
    command: [ "--default-authentication-plugin=mysql_native_password" ]

variables:
  MAVEN_CLI_OPTS: "--batch-mode"
  #config maven pour stocker le repository dans un emplacement connu
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

  MYSQL_ROOT_PASSWORD: rootPass
  MYSQL_USER: usr_lib10
#  MYSQL_PASSWORD: secret
  MYSQL_DATABASE: LIB10
  MYSQL_HOST: mysql

stages:
  - build
  - test
  - test-api
#  - integration-test

.init-db: &init-db
  #connexion et test de connexion
  - echo "SELECT 'OK';" | mysql --user=root --password="${MYSQL_ROOT_PASSWORD}" --host=mysql "${MYSQL_DATABASE}"

  - mysql --user=root --password="${MYSQL_ROOT_PASSWORD}" --host=mysql < ./docker/dev/init/db/docker-entrypoint-initdb.d/01_create_schema.sql
  - mysql --user=root --password="${MYSQL_ROOT_PASSWORD}" --host=mysql < ./docker/dev/init/db/docker-entrypoint-initdb.d/02_create_tables.sql
  - mysql --user=root --password="${MYSQL_ROOT_PASSWORD}" --host=mysql --database="${MYSQL_DATABASE}" < ./docker/dev/init/db/docker-entrypoint-initdb.d/21_insert_data_demo.sql

build:
  stage: build
  services: 
    - name: docker:latest
  coverage: '/Total.*?([0–9]{1,3})%/'
  #before_script:
  #  - *init-db
  script:
    - cd Lib10/
    - docker build mvn $MAVEN_CLI_OPTS compile
    #- mvn $MAVEN_CLI_OPTS compile
    #- mvn verify
  artifacts:
    expire_in: 1 hour
    paths:
      - '**/target' # for multi-modules project with directory root as a pom package type

unit-test:
  stage: test
  coverage: '/Total.*?([0–9]{1,3})%/'
  needs:
    - job: build
  script:
    #remet a jour les dates de modif des fichiers .class pour eviter une recompilation
    - find . -name "*.class" -exec touch {} \+
    - cd Lib10/
    #- docker build mvn $MAVEN_CLI_OPTS test
    - mvn $MAVEN_CLI_OPTS test
  artifacts:
    reports:
      junit:
        - "**/target/surefire-reports/TEST-*.xml"
    expire_in: 1 hour
    paths:
      - "**/target" # for multi-modules project with directory root as a pom package type

api-test:
  stage: test-api
  image: 
    name: postman/newman:alpine
    entrypoint: [""]
  needs:
    - job: unit-test
  script:
    #- cd Lib10/
    #- mvn $MAVEN_CLI_OPTS compile
    #- cd ../
    - newman --version
    - newman run Lib10_testing.postman_collection.json -e localhost.postman_environment.json
