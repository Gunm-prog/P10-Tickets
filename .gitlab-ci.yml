image: aritrasasmal/maven-mysql-java

cache:
  paths:
    - "**/.m2/repository"

services:
  - name: mysql:8.0
    command: [ "--default-authentication-plugin=mysql_native_password" ]

variables:
  MAVEN_CLI_OPTS: "--batch-mode"
  #config maven pour stocker le repository dans un emplacement connu
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

  MYSQL_ROOT_PASSWORD: root
  MYSQL_USER: usr_lib10
  MYSQL_PASSWORD: secret
  MYSQL_DATABASE: LIB10
  MYSQL_HOST: mysql

stages:
  - build
  - test
 # - test-api
#  - integration-test

.init-db: &init-db
  #connexion et test de connexion
  #- export PGPASSWORD=$POSTGRES_PASSWORD
  #- psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT 'OK' AS status;"
 # - mysql -h DB_HOST -U MYSQL_USER -d MYSQL_DATABASE -c "SELECT 'OK' AS status;"
 
 - mysql -u root -p"$MYSQL_ROOT_PASSWORD" -h "${MYSQL_HOST}" -c "SELECT 'OK' AS status;"

  #mysql -u root --password="${MYSQL_ROOT_PASSWORD}" -h mysql

  #load demo data
  #- mysql -u "MYSQL_USER" -p "MYSQL_DATABASE" < ./docker/dev/init/db/docker-entrypoint-initdb.d/01_create_schema.sql
 # - mysql -u root -p "MYSQL_ROOT_PASSWORD" < ./docker/dev/init/db/docker-entrypoint-initdb.d/01_create_schema.sql
  #- mysql -u "MYSQL_USER" -p "MYSQL_DATABASE" < ./docker/dev/init/db/docker-entrypoint-initdb.d/02_create_tables.sql
  #- mysql -u "MYSQL_USER" -p "MYSQL_DATABASE" < ./docker/dev/init/db/docker-entrypoint-initdb.d/21_insert_data_demo.sql
 # - mysql > ALTER USER 'root'@'mysql' IDENTIFIED WITH mysql_native_password BY 'root';
 # - mysql.server restart
  - mysql < ./docker/dev/init/db/docker-entrypoint-initdb.d/01_create_schema.sql
  - mysql < ./docker/dev/init/db/docker-entrypoint-initdb.d/02_create_tables.sql
  - mysql < ./docker/dev/init/db/docker-entrypoint-initdb.d/21_insert_data_demo.sql

build:
  stage: build
  coverage: '/Total.*?([0–9]{1,3})%/'
  before_script:
    - *init-db
  script:
    - cd Lib10/
    - mvn $MAVEN_CLI_OPTS compile
    #- mvn verify
  artifacts:
    expire_in: 1 hour
    paths:
      - '**/target' # for multi-modules project with directory root as a pom package type

unit-test:
  stage: test
  coverage: '/Total.*?([0–9]{1,3})%/'
  needs:
    - job: build
 # before_script:
 #   - *init-db
  script:
    #remet a jour les dates de modif des fichiers .class pour eviter une recompilation
    - find . -name "*.class" -exec touch {} \+
    - cd Lib10/
    - mvn $MAVEN_CLI_OPTS test
  artifacts:
    reports:
      junit:
        - "**/target/surefire-reports/TEST-*.xml"
    expire_in: 1 hour
    paths:
      - "**/target" # for multi-modules project with directory root as a pom package type

#api-test:
 # stage: test-api
  #needs:
   # - job: unit-test
  #before_script:
   # - *init-db
  #script:

